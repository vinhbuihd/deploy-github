{"version":3,"sources":["components/TodoList/TodoForm.jsx","components/TodoList/TodoList.jsx","components/TodoList/TodoApp.jsx","index.js"],"names":["TodoForm","handleSubmit","edit","useState","name","input","setInput","refValue","useRef","useEffect","current","focus","handleChangeInput","e","target","value","onSubmit","preventDefault","formValue","id","Date","getTime","type","onChange","placeholder","ref","Todolist","todos","deleteTodo","updateTodo","todoCompelete","setEdit","className","map","todo","isComplete","onClick","TodoApp","setTodos","test","newTodos","TodoList","filter","todoId","prev","updatedTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b7c081c.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport './app.scss';\r\n\r\n\r\n\r\nfunction TodoForm({handleSubmit, edit}) {\r\n\r\n    const [input, setInput] = useState(edit ? edit.name : '');\r\n    const refValue = useRef(null);\r\n    useEffect(() => {\r\n        refValue.current.focus();\r\n    })\r\n\r\n    const handleChangeInput = e => setInput(e.target.value);\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n        if (!handleSubmit) return;\r\n        const formValue = {\r\n            id: new Date().getTime(),\r\n            name: input,\r\n        }\r\n        handleSubmit(formValue);\r\n        setInput('');\r\n    }\r\n    return (\r\n        <form onSubmit={onFormSubmit}>\r\n            {edit ? (\r\n                <>\r\n                    <input \r\n                        type='text'\r\n                        value={input}\r\n                        onChange={handleChangeInput}\r\n                        placeholder='Update Todo'\r\n                        ref={refValue}\r\n                    />\r\n                    <button type=\"submit\">Update</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <input \r\n                        type='text'\r\n                        value={input}\r\n                        onChange={handleChangeInput}\r\n                        placeholder='Add a Todo'\r\n                        ref={refValue}\r\n                    />\r\n                    <button type=\"submit\">Add Todo</button>\r\n                </>\r\n            )}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import React, { useState } from 'react';\r\nimport {RiChatDeleteLine} from 'react-icons/ri';\r\nimport {FaRegEdit} from 'react-icons/fa';\r\nimport TodoForm from './TodoForm';\r\nimport './app.scss';\r\n\r\n\r\nfunction Todolist({todos, deleteTodo, updateTodo, todoCompelete}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        name: '',\r\n    })\r\n    const handleCompelete = (id) => {\r\n        todoCompelete(id)\r\n    }\r\n    \r\n    const handleDelete = id => {\r\n        deleteTodo(id)\r\n    }\r\n\r\n    const submitUpdate = formValue => {\r\n        updateTodo(edit.id, formValue)\r\n        setEdit({\r\n            id: null,\r\n            name: '',\r\n        })\r\n    }\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} handleSubmit={submitUpdate}/>\r\n    }\r\n    return (\r\n        <ul className='todo-list'>\r\n            {\r\n                todos.map(todo => (\r\n                    <li key={todo.id} className={todo.isComplete ? 'todo-item compelete' : 'todo-item'}>\r\n                        <div className='todo-list-name' onClick={() => handleCompelete(todo.id)}>{todo.name}</div>\r\n                    \r\n                        <div className='todo-list-icon' onClick={() => setEdit({id: todo.id, name: todo.name})}>\r\n                            <FaRegEdit />\r\n                        </div>\r\n                        <div className='todo-list-icon'onClick={() => handleDelete(todo.id)}>\r\n                            <RiChatDeleteLine />   \r\n                        </div>\r\n                        \r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Todolist;","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport './app.scss';\r\n\r\nfunction TodoApp() {\r\n    const [todos, setTodos] = useState([{id: 1, name: 'Học Lập Trình'}, {id: 2, name: 'Gọi điện cho Gấu'}]);\r\n    const addTodo = formValue => {\r\n        if(!formValue.name || /^\\s*$/.test(formValue.name)) return;\r\n        const newTodos = [formValue, ...todos];\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const updateTodo = (todoId, formValue) => {\r\n        if(!formValue.name || /^\\s*$/.test(formValue.name)) return;\r\n        setTodos(prev => prev.map(todo => todo.id === todoId ? formValue : todo))\r\n    }\r\n    const deleteTodo = id => {\r\n        const newTodos = [...todos].filter(todo => todo.id !== id);\r\n        setTodos(newTodos);\r\n    }\r\n    const compeleteTodo = (id) => {\r\n        let updatedTodo = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodo);\r\n    }\r\n    return (\r\n        <div className='app'>\r\n            <div className='wrapper'>\r\n            <h1>Today, What is your plan?</h1>\r\n            <TodoForm handleSubmit={addTodo}/>\r\n            <TodoList todos={todos} deleteTodo={deleteTodo} updateTodo={updateTodo} todoCompelete={compeleteTodo}/>\r\n        </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default TodoApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoApp from './components/TodoList/TodoApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}